<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:WpfCustomControlApp1"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Style TargetType="{x:Type local:CNumericUpDown}">
        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="{x:Type local:CNumericUpDown}">
                    <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}" d:DesignWidth="231" d:DesignHeight="86">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PositiveNegative">
                                <VisualState x:Name="Positive" />
                                <VisualState x:Name="Negative">
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="textBlockValue"
                                            Storyboard.TargetProperty="Foreground.Color"
                                            To="Red" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="21*" />
                                <RowDefinition Height="22*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="textBlockValue" TextWrapping="Wrap"
                                       Text="{Binding Value, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CNumericUpDown}}}"
                                       Height="Auto" Grid.RowSpan="2" Width="Auto"
                                       HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="Black" />
                            <RepeatButton x:Name="PART_UpButton" Content="Up" Grid.Column="1" Height="Auto" Width="Auto" Margin="2.5" />
                            <RepeatButton x:Name="PART_DownButton" Content="Down" Grid.Column="1" Grid.Row="1" Margin="2.5" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleControlDefaultStyle" TargetType="{x:Type local:ToggleControl}">

        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ToggleControl}">
                    <Border Name="_Box"
                                Height="20" Width="40"
                                CornerRadius="10"
                                BorderThickness="1" Padding="2">
                        <Border Name="_CheckMark"
                                    Width="14"
                                    Height="14"
                                    HorizontalAlignment="Left"
                                    CornerRadius="10">
                            <ContentPresenter />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="_CheckMark" Property="HorizontalAlignment" Value="Right" />
                            <Setter TargetName="_CheckMark" Property="Background" Value="#FFFFFFFF" />
                            <Setter TargetName="_CheckMark" Property="BorderBrush" Value="#FF0067C0" />
                            <Setter TargetName="_Box" Property="Background" Value="#FF0067C0" />
                            <Setter TargetName="_Box" Property="BorderBrush" Value="#FF0067C0" />
                            <Setter TargetName="_Box" Property="BorderThickness" Value="0" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="_CheckMark" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="_CheckMark" Property="Background" Value="#FF5B5B5C" />
                            <Setter TargetName="_Box" Property="Background" Value="Transparent" />
                            <Setter TargetName="_Box" Property="BorderBrush" Value="#FF868688" />
                            <Setter TargetName="_Box" Property="BorderThickness" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="_CheckMark" Property="Background" Value="#FFFFFFFF" />
                            <Setter TargetName="_CheckMark" Property="BorderBrush" Value="#FFCCCCCC" />
                            <Setter TargetName="_Box" Property="Background" Value="#FFCCCCCC" />
                            <Setter TargetName="_Box" Property="BorderBrush" Value="#FFCCCCCC" />
                            <Setter TargetName="_Box" Property="BorderThickness" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
